import{S as p,e as _,f as g,g as b,D as v,a as x,d as B,W,c as y}from"./three.module-FffQEkxT.js";import{O as A}from"./OrbitControls-RfyKrsAp.js";import{d as H,g as M,h as S,o as k,a as C}from"./index-2j7IQfhn.js";const d=200,R=H({__name:"BufferGeomery",setup(E){const o=M(null),s=window.innerWidth-d,a=window.innerHeight,t=new p,c=new _,l=new Float32Array([0,0,0,50,0,0,0,100,0,0,0,10,0,0,100,50,0,10]),w=new g(l,3);c.attributes.position=w;const m=new b({color:16711680,side:v}),u=new x(c,m);t.add(u);const e=new B(30,s/a,.1,3e3);e.position.set(300,300,300),e.lookAt(0,0,0);const n=new W;n.setPixelRatio(window.devicePixelRatio),n.setSize(s,a),n.render(t,e);const f=new A(e,n.domElement),h=new y(100);return t.add(h),S(()=>{if(!o.value)return;o.value.appendChild(n.domElement),f.addEventListener("change",()=>{n.render(t,e)});function r(){n.render(t,e),requestAnimationFrame(r)}r(),window.onresize=function(){const i=window.innerWidth-d;e.aspect=i/window.innerHeight,e.updateProjectionMatrix(),n.setSize(i,window.innerHeight)}}),(r,i)=>(k(),C("div",{ref_key:"container",ref:o,class:"container"},null,512))}});export{R as default};
